---

- name: mount conf dir
  mount:
    path: /tmp/mnt
    src: "{{ nfs_host }}:{{ conf_mount }}"
    fstype: nfs4
    opts: defaults,proto=tcp,port=2049,rw
    state: mounted

- name: ensure conf dirs exist
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /tmp/mnt/collectd
  - /tmp/mnt/influxdb

- name: retrieve types db
  get_url:
    url: https://raw.githubusercontent.com/collectd/collectd/master/src/types.db
    dest: /tmp/mnt/collectd/types.db
    mode: 0755

- name: check conf exists
  stat:
    path: /tmp/mnt/influxdb/influxdb.conf
  register: conf

- name: retrieve default conf
  docker_container:
    name: influxdb-tmp
    image: influxdb:latest
    command: influxd config
    detach: no
  register: default_conf
  when: conf.stat.exists == false

- name: write output to file
  copy:
    content: "{{ default_conf.ansible_facts.docker_container.Output }}"
    dest: /tmp/mnt/influxdb/influxdb.conf
  when: conf.stat.exists == false

- name: remove temp container
  docker_container:
    name: influxdb-tmp
    state: absent
  ignore_errors: yes

- name: default custom configuration
  replace:
    dest: /tmp/mnt/influxdb/influxdb.conf
    replace: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  with_items:
  - regexp: (\[\[collectd\]\][^\[]*)\s?enabled\s?=\s?false
    line: '\1enabled = true'
  - regexp: (\[\[udp\]\][^\[]*)\s?enabled\s?=\s?false
    line: '\1enabled = true'
  - regexp: (\[\[udp\]\][^\[]*)\s?database\s?=\s?\"udp\"
    line: '\1database = "{{ proxmox_db }}"'
  - regexp: "Merging with configuration at: /etc/influxdb/influxdb.conf"
    line: ""

- name: unmount conf dir
  mount:
    path: /tmp/mnt
    state: unmounted

- name: create volumes
  docker_volume:
    name: "{{ item.name }}"
    driver_options:
      type: nfs
      device: ":/{{ item.mount }}"
      o: "addr={{ nfs_host }},vers=4,tcp,rw,port=2049"
  with_items:
  - name: conf
    mount: "{{ conf_mount }}/influxdb"
  - name: conf_collectd
    mount: "{{ conf_mount }}/collectd"
  - name: data
    mount: "{{ data_mount }}"

- name: start container
  docker_container:
    name: influxdb
    image: influxdb:latest
    restart_policy: unless-stopped
    user: "{{ influxdb_docker_user_id }}:0"
    ports:
    - 8086:8086
    - 8088:8088
    - 2003:2003
    - 25826:25826/udp
    - 8089:8089/udp
    volumes:
    - conf:/etc/influxdb
    - conf_collectd:/usr/share/collectd
    - data:/var/lib/influxdb

- name: install pip
  yum:
    name:
    - python3-pip
    - python2-pip
    state: present

- name: install influxdb pip
  pip:
    name: influxdb

- name: create databases
  influxdb_database:
    hostname: "0.0.0.0"
    database_name: "{{ item }}"  
  with_items:
  - collectd
  - "{{ proxmox_db }}"
  - "{{ telegraf_db }}"

- name: create users
  influxdb_user:
    user_name: "{{ item.user }}"
    user_password: "{{ item.pass }}"
    grants: "{{ item.grants }}"
  with_items:
  - user: "{{ influxdb_collectd_writer_user }}"
    pass: "{{ influxdb_collectd_writer_pass }}"
    grants:
    - database: collectd
      privilege: "WRITE"
  - user: "{{ influxdb_telegraf_writer_user }}"
    pass: "{{ influxdb_telegraf_writer_pass }}"
    grants:
    - database: "{{ telegraf_db }}"
      privilege: "WRITE"
  - user: "{{ influxdb_grafana_user }}"
    pass: "{{ influxdb_grafana_pass }}"
    grants:
    - database: collectd
      privilege: "READ"
    - database: "{{ proxmox_db }}"
      privilege: "READ"
    - database: "{{ telegraf_db }}"
      privilege: "READ"
