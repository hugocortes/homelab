---

- name: go | download and untar binary
  become: yes
  unarchive:
    remote_src: yes
    src: https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz
    dest: /opt

- name: go | create symlinks
  become: yes
  file:
    src: "/opt/go/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    state: link
  with_items:
  - go
  - gofmt

- name: go | get aditional bin tools
  block:
  - name: go | download cloudlare ssl tools
    become: no
    command: "go get -u github.com/cloudflare/cfssl/cmd/{{ item }}"
    with_items:
    - cfssl
    - cfssljson

  - name: go | create cloudflare symlink
    become: yes
    file:
      src: "{{ ansible_env['HOME'] }}/go/bin/{{ item }}"
      dest: "/usr/local/bin/{{ item }}"
      state: link
    with_items:
    - cfssl
    - cfssljson

- name: mvn | check if maven dir exists
  become: yes
  stat:
    path: /opt/maven
  register: opt_maven

- name: mvn | install
  block:
  - name: mvn | download and untar
    become: no
    unarchive:
      remote_src: yes
      src: https://mirrors.gigenet.com/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
      dest: /tmp

  - name: mvn | move to opt
    become: yes
    command: mv /tmp/apache-maven-3.6.3 /opt/maven    
  when: not opt_maven.stat.exists

- name: mvn | register bin files
  become: yes
  find:
    paths:
    - /opt/maven/bin
    file_type: file
    use_regex: yes
    patterns:
    - ^[^\.]+$
  register: find_maven

- name: mvn | craete symlinks
  become: yes
  file:
    src: "{{ item.path }}"
    dest: "/usr/local/bin/{{ item.path | basename }}"
    state: link
  with_items: "{{ find_maven.files }}"

- name: rust | download install script
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/rust-install.sh
    mode: +x

- name: rust | install
  command: /bin/sh /tmp/rust-install.sh -y

# requires virtualbox
- name: minikube | download
  become: no
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: /tmp/minikube
    mode: +x

- name: minikube | install to bin
  become: yes
  shell: install /tmp/minikube /usr/local/bin/

- name: minikube | set default driver to virtualbox
  shell: minikube config set vm-driver virtualbox

- name: intellij | download and untar
  become: no
  unarchive:
    remote_src: yes
    src: https://download.jetbrains.com/toolbox/jetbrains-toolbox-1.17.7018.tar.gz
    dest: /tmp

- name: intellij | move to opt
  become: yes
  command: mv /tmp/jetbrains-toolbox-1.17.7018/jetbrains-toolbox /opt/jetbrains-toolbox

- name: intellij | remove toolbox from autostart
  become: no
  file:
    path: "{{ ansible_env['HOME'] }}/.config/autostart/jetbrains-toolbox.desktop"
    state: absent

- name: nvm | get latest version
  uri:
    url: https://api.github.com/repos/nvm-sh/nvm/releases/latest
    method: GET
    return_content: yes
  register: nvm

- name: nvm | download install script
  get_url:
    url: "https://raw.githubusercontent.com/nvm-sh/nvm/{{ nvm.json.tag_name }}/install.sh"
    dest: /tmp/nvm-install.sh
    mode: +x

- name: nvm | install
  command: /bin/bash /tmp/nvm-install.sh

- name: robo3t | check if robo3t dir exists
  stat:
    path: /opt/robo3t
  register: opt_robo3t

- name: robo3t | install
  block:
  - name: robo3t | download and untar
    unarchive:
      remote_src: yes
      src: https://download-test.robomongo.org/linux/robo3t-1.3.1-linux-x86_64-7419c406.tar.gz
      dest: /tmp

  - name: robo3t | move to opt
    become: yes
    command: mv /tmp/robo3t-1.3.1-linux-x86_64-7419c406 /opt/robo3t

  - name: robo3t | create symlink
    become: yes
    file:
      src: /opt/robo3t/bin/robo3t
      dest: /usr/local/bin/robo3t
      state: link
  when: not opt_robo3t.stat.exists

- name: tmm | check if tmm dir exists
  stat:
    path: /opt/tinymediamanager
  register: opt_tmm

- name: tmm | install
  block:
  - name: tmm | create opt dir
    become: yes
    file:
      path: /opt/tinymediamanager
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      state: directory

  - name: tmm | download and untar
    become: yes
    unarchive:
      remote_src: yes
      src: https://release.tinymediamanager.org/v3/dist/tmm_3.1.7_linux.tar.gz
      dest: /opt/tinymediamanager
  when: not opt_tmm.stat.exists

- name: tmm | create shortcut
  copy:
    dest: ~/.local/share/applications/tinyMediaManager.desktop
    content: |
      [Desktop Entry]
      Type=Application
      Terminal=false
      Name=tinyMediaManager
      Icon=/opt/tinymediamanager/tmm.png
      Exec=/opt/tinymediamanager/tinyMediaManager.sh

- name: faas-cli | download install script
  get_url:
    url: https://cli.openfaas.com
    dest: /tmp/faas-cli-install.sh
    mode: +x

- name: faas-cli | run install script
  become: yes
  command: /bin/sh /tmp/faas-cli-install.sh

- name: helm | download install script
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: /tmp/helm-install.sh
    mode: +x

- name: helm | run install script
  become: yes
  command: /bin/bash /tmp/helm-install.sh

- name: spin-cli | get latest version
  uri:
    url: https://storage.googleapis.com/spinnaker-artifacts/spin/latest
    method: GET
    return_content: yes
  register: spin_cli_version

# BUG with 1.17.0
# - name: spin-cli | download to opt
#   become: yes
#   get_url:
#     url: "https://storage.googleapis.com/spinnaker-artifacts/spin/{{ spin_cli_version.content }}/linux/amd64/spin"
#     dest: /opt/spin
#     mode: +x

- name: spin-cli | download to opt
  become: yes
  get_url:
    url: "https://storage.googleapis.com/spinnaker-artifacts/spin/1.14.0/linux/amd64/spin"
    dest: /opt/spin
    mode: +x

- name: spin-cli | create symlink
  become: yes
  file:
    src: /opt/spin
    dest: /usr/local/bin/spin
    state: link

- name: spin-cli | create dir
  file:
    path: "{{ ansible_env['HOME'] }}/.spin"
    state: directory

- name: spin-cli | create config
  copy:
    dest: "{{ ansible_env['HOME'] }}/.spin/config"
    content: "{{ spin_cli | to_nice_yaml }}"
    force: no
