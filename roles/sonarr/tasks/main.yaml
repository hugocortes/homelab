---

- name: ensure home directory exists
  file:
    path: /home/{{ service_user }}
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: 0755
    state: directory

- name: add rpm key
  rpm_key:
    state: present
    key: http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF

- name: add mono repo
  yum_repository:
    name: mono
    description: mono project
    baseurl: http://download.mono-project.com/repo/centos/

- name: install required deps
  yum:
    state: present
    name:
    - yum-utils
    - wget
    - mediainfo
    - libzen
    - libmediainfo
    - curl
    - gettext
    - mono-core
    - mono-devel
    - sqlite.x86_64
    - git
    - par2cmdline
    - p7zip
    - unzip
    - tar
    - gcc
    - python-feedparser
    - python-configobj
    - python-cheetah
    - python-dbus
    - python-devel
    - libxslt-devel

- name: file exists
  shell: |
    find /tmp -iname NzbDrone.master.tar.gz
  register: service

- name: download service
  shell: |
    cd /tmp
    wget http://update.sonarr.tv/v2/master/mono/NzbDrone.master.tar.gz
  when: service.stdout_lines | length == 0

- name: file exists
  shell: |
    find /tmp -iname NzbDrone.master.tar.gz
  register: service

- name: create tmp sonarr dir
  file:
    path: /var/lib/sonarr/bin
    mode: 0755
    state: directory

- name: unarchive service
  unarchive:
    src: "{{ service.stdout_lines[0] }}"
    dest: /var/lib/sonarr/bin
    copy: no
    extra_opts: [--strip-components=1]

- name: create service conf
  copy:
    content: |
      [Unit]
      Description=Sonarr Daemon
      After=syslog.target network.target

      [Service]
      SyslogIdentifier=sonarr
      User={{ service_user }}
      Group={{ service_group }}
      Type=simple

      ExecStart=/usr/bin/mono /var/lib/sonarr/bin/NzbDrone.exe -nobrowser -data /var/lib/sonarr
      TimeoutStopSec=20
      KillMode=process
      Restart=on-failure
      RestartSec=5

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/sonarr.service
    force: no
    group: root
    owner: root
    mode: 0755

- name: change service ownership
  file:
    dest: /var/lib/sonarr
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    recurse: yes

- name: systemd reload
  systemd:
    daemon_reload: yes

- name: enable service
  service:
    name: sonarr
    enabled: yes

- name: start service
  service:
    name: sonarr
    state: started
