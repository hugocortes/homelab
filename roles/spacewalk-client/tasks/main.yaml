---

- name: install centos spacewalk
  block:
  - name: install spacewalk server ca
    yum:
      name: "http://{{ spacewalk_hostname }}/pub/rhn-org-trusted-ssl-cert-1.0-2.noarch.rpm"
      state: present
      disable_gpg_check: yes

  - name: add depdencies
    yum:
      name:
      - yum-plugin-tmprepo

  - name: install spacewalk client repo
    command: yum install -y spacewalk-client-repo --tmprepo=https://copr-be.cloud.fedoraproject.org/results/%40spacewalkproject/spacewalk-2.9-client/epel-7-x86_64/repodata/repomd.xml --nogpg

  - name: install epel 7
    command: rpm -Uvh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    ignore_errors: yes

  - name: install dependencies
    yum:
      name:
      - rhn-client-tools
      - rhn-check
      - rhn-setup
      - rhnsd
      - m2crypto
      - yum-rhn-plugin
      - osad
      state: present

  - name: register to centos channel
    command: "rhnreg_ks --activationkey 1-centos7-base --serverUrl https://{{ spacewalk_hostname }}/XMLRPC"
    when: "'docker' not in group_names and 'kubernetes' not in group_names"
    ignore_errors: yes

  - name: register to docker channel
    command: "rhnreg_ks --activationkey 1-centos7-docker --serverUrl https://{{ spacewalk_hostname }}/XMLRPC"
    when: "'docker' in group_names"
    ignore_errors: yes

  - name: register to kubernetes channel
    command: "rhnreg_ks --activationkey 1-centos7-kubernetes --serverUrl https://{{ spacewalk_hostname }}/XMLRPC"
    when: "'kubernetes' in group_names"
    ignore_errors: yes

  - name: ensure repo backup dir exists
    file:
      path: /etc/yum.repos.d/backup
      state: directory

  - name: move repos into backup
    shell: mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup
    ignore_errors: yes

  - name: clean yum
    shell: yum clean all && yum clean metadata && yum repolist all

  - name: configure yum rhn plugin
    lineinfile:
      dest: /etc/yum/pluginconf.d/rhnplugin.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
    with_items:
    - regexp: ^gpgcheck
      line: gpgcheck = 0
    - regexp: ^enabled
      line: enabled = 1
  when: ansible_os_family == "RedHat"

- name: enable osad
  service:
    name: osad
    state: started
    enabled: yes

- name: enable rhnsd
  service:
    name: rhnsd
    state: started
    enabled: yes
