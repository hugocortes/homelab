---

- name: centos | install collectd
  dnf:
    name:
    - collectd
    state: present
  when: is_centos

- name: debian | install collectd
  apt:
    name:
    - collectd
    state: present
  when: is_debian

- name: set collectd conf file path
  set_fact:
    collectd_conf: "{{ '/etc/collectd/collectd.conf' if is_debian else '/etc/collectd.conf' }}"

- name: configure settings
  lineinfile:
    dest: "{{ collectd_conf }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
  - regexp: FQDNLookup\s
    line: FQDNLookup true
  - regexp: Hostname\s
    line: Hostname "{{ inventory_hostname }}"
  - regexp: TypesDB\s
    line: TypesDB "/usr/share/collectd/types.db"
  - regexp: ^[#]?BaseDir\s
    line: BaseDir "/var/lib/collectd"
  - regexp: ^[#]?PluginDir\s
    line: "{{ 'PluginDir \"/usr/lib/collectd/\"' if is_debian else 'PluginDir \"/usr/lib64/collectd\"' }}"
  - regexp: ^[#]?Interval\s
    line: Interval 60

- name: load plugins
  lineinfile:
    dest: "{{ collectd_conf }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: ^TypesDB\s
    state: present
  with_items:
  - regexp: ^LoadPlugin network$
    line: LoadPlugin network
  - regexp: ^LoadPlugin df$
    line: LoadPlugin df
  - regexp: ^LoadPlugin fhcount$
    line: LoadPlugin fhcount

- name: configure network plugin with influxdb
  blockinfile:
    dest: "{{ collectd_conf }}"
    marker: "# {mark}-network ANSIBLE MANAGED BLOCK #"
    block: |
      <Plugin network>
        Server "{{ global.collectd.host }}" "{{ global.collectd.port }}"
      </Plugin>

- name: configure df plugin
  blockinfile:
    dest: "{{ collectd_conf }}"
    marker: "# {mark}-df ANSIBLE MANAGED BLOCK #"
    block: |
      <Plugin df>
        ReportInodes true
      </Plugin>

- name: enable collectd
  service:
    name: collectd
    enabled: yes

- name: restart collectd
  service:
    name: collectd
    state: restarted
