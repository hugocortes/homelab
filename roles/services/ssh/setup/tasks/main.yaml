---

- name: disable root login
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regexp: "^PermitRootLogin", line: "PermitRootLogin no" }
  notify: restart ssh

# TODO this should still disable password auth
- name: add authorized keys to vm workstation
  authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: https://github.com/hugocortes.keys
  when: is_workstation
  notify: restart ssh

- name: disable password authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regexp: "^PasswordAuthentication", line: "PasswordAuthentication no" }
    - { regexp: "^ChallengeResponseAuthentication yes", line: "ChallengeResponseAuthentication no" }
  when: is_internal
  notify: restart ssh

- name: configure bastion host access
  block:
  - name: block access to non bastion users from bastion host
    blockinfile:
      dest: /etc/ssh/sshd_config
      marker: "# {mark}-block-bastion"
      block: |
        Match User *,!{{ bastion.user }} Address {{ bastion.host }}
          ForceCommand /bin/false
    when: is_internal and (bastion.user and bastion.host)
    notify: restart ssh

  - name: block access from bastion host
    blockinfile:
      dest: /etc/ssh/sshd_config
      marker: "# {mark}-block-bastion"
      block: |
        Match Address {{ bastion.host }}
          ForceCommand /bin/false
    when: not is_internal and (bastion.user and bastion.host)
    notify: restart ssh
  when: (bastion is defined) and (bastion.host != lookup('dig', ansible_host))

- name: centos | install fail2ban
  import_tasks: centos.yaml
  when: is_centos

- name: debian | install fail2ban
  import_tasks: debian.yaml
  when: is_debian

- name: configure fail2ban jail
  blockinfile:
    dest: /etc/fail2ban/jail.conf
    marker: "# {mark} ANSIBLE MANAGED BLOCK #"
    block: |
      [sshban]
      enabled   = true
      port      = ssh
      logpath   = %(sshd_log)s
      banaction = iptables-allports
      maxretry  = 10
      bantime   = 86400
      filter    = sshd
  notify: restart fail2ban
